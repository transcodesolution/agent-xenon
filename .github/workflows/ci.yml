name: NX Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # Install dependencies
      - run: npm ci --legacy-peer-deps

      # Ensure correct SHAs for affected commands
      - uses: nrwl/nx-set-shas@v4

      - name: Build projects
        run: npx nx run back-end:build --configuration=production

      - name: Archive build artifacts
        run: tar -czf build-output.tar.gz dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nx-build-output
          path: build-output.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: nx-build-output

      # Debug: Check if SERVER_URL is set
      - name: Debug Server URL
        run: echo "Server URL is: '$SERVER_URL'"
        env:
          SERVER_URL: ${{ secrets.SERVER_URL }}

      # Debug: Check SSH Connection Before Deployment
      - name: Debug SSH Connection
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER_URL >> ~/.ssh/known_hosts
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_URL "echo 'Connected successfully'"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.SERVER_URL }}

      - name: Deploy to server
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER_URL >> ~/.ssh/known_hosts

          scp -i ~/.ssh/id_rsa -r build-output.tar.gz $SERVER_URL
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_URL "cd ~/agent-xenon && tar -xzf build-output.tar.gz && npm i && pm2 restart 0"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_URL: ${{ secrets.SERVER_URL }}
